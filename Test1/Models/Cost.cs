
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test1.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    public partial class Cost : INotifyPropertyChanged
    {
        private int id;
        public int Id { get { return id; } set { id = value; OnPropertyChanged("Id"); } }
        private string invoiceNr;
        public string InvoiceNr { get { return invoiceNr; } set { invoiceNr = value; OnPropertyChanged("InvoiceNr"); } }
        private DateTime purchaseDate;
        public DateTime PurchaseDate { get { return purchaseDate; } set { purchaseDate = value; OnPropertyChanged("PurchaseDate"); } }
        private string description;
        public string Description { get { return description; } set { description = value; OnPropertyChanged("Description"); } }
        private string costType;
        public string CostType { get { return costType; } set { costType = value; OnPropertyChanged("CostType"); } }
        private string supplier;
        public string Supplier { get { return supplier; } set { supplier = value; OnPropertyChanged("Supplier"); } }
        private int supplierId;
        public int SupplierId { get { return supplierId; } set { supplierId = value; OnPropertyChanged("SupplierID"); } }
        private int orderId;
        public int OrderId { get { return orderId; } set { orderId = value; OnPropertyChanged("OrderId"); } }
        private decimal valueNetto;
        public decimal ValueNetto { get { return valueNetto; } set { valueNetto = value; OnPropertyChanged("ValueNetto"); } }
        private Nullable<bool> paid { get; set; }
        public Nullable<bool> Paid { get { return paid; } set { paid = value;OnPropertyChanged("Paid"); } }
        private Order order { get; set; }
        public Order Order { get { return order; } set { order = value; OnPropertyChanged("Order"); }}


        public event PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged(string property)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(property));
            }
        }
    }
}

